name: CI

on:
  push:
    # Don't run this workflow when a tag is pushed.
    branches:
      - '*'
  pull_request:

env:
  MSVC_CONFIG: RelWithDebInfo

jobs:
  linux:
    runs-on: ubuntu-24.04

    env:
      LIBLOOT_VERSION: 0.27.0

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set libloot install path
        run: echo "LIBLOOT_INSTALL_PATH=${{ github.workspace }}/libloot-${{ env.LIBLOOT_VERSION }}-install" >> $GITHUB_ENV

      - name: libloot cache
        id: libloot-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.LIBLOOT_INSTALL_PATH }}
          key: ${{ runner.os }}-libloot-${{ env.LIBLOOT_VERSION }}

      - name: Get descriptive version
        id: get-version
        shell: bash
        run: |
          GIT_DESCRIBE=$(git describe --tags --long --abbrev=7)
          DESC_REF=${GIT_DESCRIBE}_${GITHUB_REF#refs/*/}
          SAFE_DESC_REF=${DESC_REF//[\/<>\"|]/_}
          echo "version=$SAFE_DESC_REF" >> $GITHUB_OUTPUT

      - name: Install APT package dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-upgrade \
            libboost-dev \
            libicu-dev \
            libtbb-dev

      # The version in apt is too old.
      - name: Install cbindgen
        run: |
          wget https://github.com/mozilla/cbindgen/releases/download/0.28.0/cbindgen
          BIN_PATH="$HOME/.local/bin/"
          mkdir -p "$BIN_PATH"
          mv cbindgen "$BIN_PATH"
          chmod +x "$BIN_PATH/cbindgen"
          echo "$BIN_PATH" >> "$GITHUB_PATH"

      - name: Download and build libloot
        run: |
          wget https://github.com/loot/libloot/archive/$LIBLOOT_VERSION.tar.gz
          tar -xf $LIBLOOT_VERSION.tar.gz

          mkdir libloot-$LIBLOOT_VERSION/build
          cd libloot-$LIBLOOT_VERSION/build

          cmake .. -DLIBLOOT_BUILD_TESTS=OFF -DLIBLOOT_INSTALL_DOCS=OFF -DCMAKE_INSTALL_PREFIX="$LIBLOOT_INSTALL_PATH"

          cmake --build . --target loot --config Release
          cmake --install . --config Release
        if: steps.libloot-cache.outputs.cache-hit != 'true'

      - name: Run CMake
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_PREFIX_PATH="${{ env.LIBLOOT_INSTALL_PATH }}" -DCPACK_PACKAGE_VERSION="${{ steps.get-version.outputs.version }}"
          make all

      - name: Build archive
        id: build-archive
        shell: bash
        run: |
          cd build
          cpack
          VERSION="${{ steps.get-version.outputs.version }}"
          echo "filename=metadata-validator-${VERSION}-Linux.tar.xz" >> $GITHUB_OUTPUT

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-archive.outputs.filename }}
          path: build/package/${{ steps.build-archive.outputs.filename }}
        if: github.event_name == 'push'

  windows:
    runs-on: windows-2025

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get descriptive version
        id: get-version
        shell: bash
        run: |
          GIT_DESCRIBE=$(git describe --tags --long --abbrev=7)
          DESC_REF=${GIT_DESCRIBE}_${GITHUB_REF#refs/*/}
          SAFE_DESC_REF=${DESC_REF//[\/<>\"|]/_}
          echo "version=$SAFE_DESC_REF" >> $GITHUB_OUTPUT

      - name: Run CMake
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A Win32 -DCPACK_PACKAGE_VERSION="${{ steps.get-version.outputs.version }}"
          cmake --build . --config ${{ env.MSVC_CONFIG }}

      - name: Build archive
        id: build-archive
        shell: bash
        run: |
          cd build
          cpack -C ${{ env.MSVC_CONFIG }}
          VERSION="${{ steps.get-version.outputs.version }}"
          echo "filename=metadata-validator-${VERSION}-win32.7z" >> $GITHUB_OUTPUT

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-archive.outputs.filename }}
          path: build/package/${{ steps.build-archive.outputs.filename }}
        if: github.event_name == 'push'
